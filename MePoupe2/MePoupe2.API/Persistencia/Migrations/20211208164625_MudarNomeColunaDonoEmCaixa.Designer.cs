// <auto-generated />
using System;
using MePoupe2.API.Persistencia.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MePoupe2.API.Persistencia.Migrations
{
    [DbContext(typeof(MePoupe2DbContext))]
    [Migration("20211208164625_MudarNomeColunaDonoEmCaixa")]
    partial class MudarNomeColunaDonoEmCaixa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MePoupe2.API.Persistencia.Entidades.Caixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDono")
                        .HasColumnType("int");

                    b.Property<int?>("IdFaturaCartaoCredito")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Quantia")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("tb_Caixas");
                });

            modelBuilder.Entity("MePoupe2.API.Persistencia.Entidades.Lancamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Efetivado")
                        .HasColumnType("int");

                    b.Property<int>("IdCaixa")
                        .HasColumnType("int");

                    b.Property<int?>("IdLancamentoParcelado")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Receita")
                        .HasColumnType("bit");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IdCaixa");

                    b.HasIndex("IdLancamentoParcelado");

                    b.ToTable("tb_Lancamentos");
                });

            modelBuilder.Entity("MePoupe2.API.Persistencia.Entidades.LancamentoParcelado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tb_LancamentosParcelados");
                });

            modelBuilder.Entity("MePoupe2.API.Persistencia.Entidades.Lancamento", b =>
                {
                    b.HasOne("MePoupe2.API.Persistencia.Entidades.Caixa", null)
                        .WithMany("Lancamentos")
                        .HasForeignKey("IdCaixa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MePoupe2.API.Persistencia.Entidades.LancamentoParcelado", null)
                        .WithMany("Parcelas")
                        .HasForeignKey("IdLancamentoParcelado")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MePoupe2.API.Persistencia.Entidades.Caixa", b =>
                {
                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("MePoupe2.API.Persistencia.Entidades.LancamentoParcelado", b =>
                {
                    b.Navigation("Parcelas");
                });
#pragma warning restore 612, 618
        }
    }
}
